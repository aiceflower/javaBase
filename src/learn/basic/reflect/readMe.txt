反射：
一、理解Class类
	1.java语言中有两样东西不是面向对象的
		1.基本数据类型类不是面向对象的
		2.静态的成员
	2.There is a class named Class
	3.一个类只可能是Class类的一个实例对象，三种表示方式获得的是同一个对象
	4.可以通过类的类类型创建该类的实例对象（需要有无参的构造方法）
		c1.newInstance();
	5.Class.forName("类名")
		不仅表示了类的类类型，还代表了动态加载类
		编译时加载类是静态加载，运行时加载类是动态加载
	6.类的加载
		1.使用new的方式加载类是静态加载类，在编译的时候就需要加载所有的可能使用到的类，不管你用不用
		2.通过动态加载类Class.forName("类名");
	7.方法的反射
		方法的名称和方法的参数列表才能唯一决定一个方法
		方法的反射操作method.invoke(对象,参数列表);
	8.泛型的本质
		java中的泛型是防止输入错误的，只在编译阶段有效，绕过编译阶段就无效了
		通过反射可以绕过编译阶段